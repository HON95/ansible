# Setup NTP (systemd-timesyncd)

# systemd

- name: Purge Chrony (systemd)
  when: 'linux_server_ntp_method == "systemd"'
  apt:
    name:
      - chrony
    state: absent
    purge: yes

- name: Install systemd-timesyncd (systemd)
  when: 'linux_server_ntp_method == "systemd"'
  apt:
    name:
      - systemd-timesyncd

- name: Set NTP servers (systemd)
  when: 'linux_server_ntp_method == "systemd" and linux_server_ntp_servers is defined'
  lineinfile:
    path: /etc/systemd/timesyncd.conf
    regexp: '^#?NTP='
    line: 'NTP={% for server in linux_server_ntp_servers %}{% if loop.index >= 2 %} {% endif %}{{ server }}{% endfor %}'
  notify: Restart systemd-timesyncd.service

- name: Unset NTP servers
  when: 'linux_server_ntp_method == "systemd" and linux_server_ntp_servers is not defined'
  lineinfile:
    path: /etc/systemd/timesyncd.conf
    regexp: '^#?NTP='
    line: '#NTP='
  notify: Restart systemd-timesyncd.service

- name: Enable systemd NTP (systemd)
  when: 'linux_server_ntp_method == "systemd"'
  service:
    name: systemd-timesyncd.service
    enabled: true
    state: started

# chrony

- name: Disable and stop systemd-timesyncd, if installed (chrony)
  when: 'linux_server_ntp_method == "chrony" and "systemd-timesync.service" in service_facts.ansible_facts.services'
  service:
    name: systemd-timesyncd.service
    enabled: false
    state: stopped

- name: Install Chrony (chrony)
  when: 'linux_server_ntp_method == "chrony"'
  apt:
    name:
      - chrony

- name: Add config file (chrony)
  when: 'linux_server_ntp_method == "chrony"'
  template:
    src: 'ntp/chrony.conf.j2'
    dest: '/etc/chrony/chrony.conf'
  notify: Restart chronyd.service

- name: Enable Chrony service (chrony)
  when: 'linux_server_ntp_method == "chrony"'
  service:
    name: chronyd.service
    enabled: yes
    state: started
