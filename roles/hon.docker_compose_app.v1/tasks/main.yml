- name: Setup server dir
  file:
    path: '{{ app.srv_path }}'
    state: directory
    mode: '700'

- name: Add docker-compose.yml (copy)
  when: 'not app.dc_file.template | default(false)'
  copy:
    src: '{{ app.dc_file.path }}'
    dest: '{{ app.srv_path }}/docker-compose.yml'
    mode: '0644'
  notify: Restart app

- name: Add docker-compose.yml (template)
  when: 'app.dc_file.template | default(false)'
  template:
    src: '{{ app.dc_file.path }}'
    dest: '{{ app.srv_path }}/docker-compose.yml'
    mode: '0644'
  notify: Restart app

- name: Add dirs (new)
  loop: '{{ app.dirs | default([]) }}'
  loop_control:
    label: '{{ item.path }}'
  file:
    path: '{{ app.srv_path }}/{{ item.path }}'
    state: directory
    owner: '{{ item.owner | default("root") }}'
    group: '{{ item.group | default("root") }}'
    mode: '{{ item.mode | default("0755") }}'
  notify: Restart app

- name: Add files (new)
  loop: '{{ app.files | default([]) }}'
  loop_control:
    label: '{{ item.path }}'
  when: 'item.type == "touch"'
  copy:
    dest: '{{ app.srv_path }}/{{ item.path }}'
    content: ''
    force: false
    owner: '{{ item.owner | default("root") }}'
    group: '{{ item.group | default("root") }}'
    mode: '{{ item.mode | default("0644") }}'
  notify: Restart app

- name: Add files (copy)
  loop: '{{ app.files | default([]) }}'
  loop_control:
    label: '{{ item.path }}'
  when: 'item.type == "copy"'
  copy:
    dest: '{{ app.srv_path }}/{{ item.path }}'
    src: '{{ item.src | default(omit) }}'
    content: '{{ item.content | default(omit) }}'
    owner: '{{ item.owner | default("root") }}'
    group: '{{ item.group | default("root") }}'
    mode: '{{ item.mode | default("0644") }}'
    backup: '{{ item.backup | default(omit) }}'
  notify: Restart app

- name: Add files (template)
  loop: '{{ app.files | default([]) }}'
  loop_control:
    label: '{{ item.path }}'
  when: 'item.type == "template"'
  template:
    dest: '{{ app.srv_path }}/{{ item.path }}'
    src: '{{ item.src | default(omit) }}'
    owner: '{{ item.owner | default("root") }}'
    group: '{{ item.group | default("root") }}'
    mode: '{{ item.mode | default("0644") }}'
    backup: '{{ item.backup | default(omit) }}'
  notify: Restart app

- name: Add files (URL)
  loop: '{{ app.files | default([]) }}'
  loop_control:
    label: '{{ item.path }}'
  when: 'item.type == "url"'
  get_url:
    dest: '{{ app.srv_path }}/{{ item.path }}'
    url: '{{ item.src | default(omit) }}'
    owner: '{{ item.owner | default("root") }}'
    group: '{{ item.group | default("root") }}'
    mode: '{{ item.mode | default("0644") }}'
    backup: '{{ item.backup | default(omit) }}'
  notify: Restart app

# Deprecated and disabled.
- name: Add files (synchronize)
  loop: '{{ app.files | default([]) }}'
  loop_control:
    label: '{{ item.path }}'
  when: 'item.type == "synchronize"'
  fail:
    msg: 'Synchronize type no longer supported, use recursive instead.'

# Recursively creates dirs and copies files.
# Uses templating for ".j2" files if "auto_template" (default true) is set.
# Does not support symlinks.
# Does not preserve ownership and permissions.
- name: Add files (recursive)
  loop: '{{ app.files | default([]) }}'
  loop_control:
    loop_var: file_item
    label: '{{ file_item.path }}'
  when: 'file_item.type == "recursive"'
  include_tasks: 'add-files-recursive.yml'

# - name: Start app
#   community.docker.docker_compose:
#     project_src: '{{ app.srv_path }}'
#     state: present
#     pull: true
#     recreate: smart
#     remove_orphans: '{{ app.remove_orphans | default(true) }}'
#     timeout: '{{ app.recreate_timeout | default(60) }}'
