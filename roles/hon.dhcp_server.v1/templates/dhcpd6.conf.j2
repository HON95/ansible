#jinja2: trim_blocks:False
# ISC DHCP Server IPv6 configuration
# {{ ansible_managed }}

# Ubiquiti
class "ubnt" {
    match if substring (option vendor-class-identifier, 0, 4) = "ubnt";
    option vendor-class-identifier "ubnt";
}

# Access switches
class "access-switch" {
    match if
        option vendor-class-identifier = "LGS326" or
        option vendor-class-identifier = "TL-SG3428" or
        option vendor-class-identifier = "T2600G-28TS";
}

authorative;
min-lease-time 300;
max-lease-time 86400;
default-lease-time 900;
option domain-name "{{ domain }}";
{%- for dns_server in infra_networks_defaults.ipv6_dns | default([]) %}
option dhcp6.name-servers {{ dns_server }};
{%- endfor %}
# Disallow multiple leases per MAC address (violated DHCP)
deny duplicates;
# Disable clients querying leases
deny leasequery;
# Disallow clients declining leases (IPv4 only)
#deny declines;
# Disable client DDNS
ddns-update-style none;

# TODO remove?
#log-facility local7;

{%- for network in infra_networks %}
{%- if network.ipv6_dhcp | default(false) %}

# [{{ network.vlan_id }}] {{ network.id }}
subnet6 {{ network.ipv6_subnet | ansible.utils.ipaddr('subnet') }} {
    {%- for dns_server in network.ipv6_dns | default([]) %}
    option dhcp6.name-servers {{ dns_server }};
    {%- endfor %}
    pool6 {
        {%- if network.allowed_class is defined %}
        allow members of "{{ network.allowed_class }}";
        {%- endif %}
        {%- if network.ipv6_subnet | ansible.utils.ipaddr('prefix') == 127 %}
        range6 {{ network.ipv6_subnet | ansible.utils.ipaddr('network') }}1 {{ network.ipv6_subnet | ansible.utils.ipaddr('network') }}1;
        {%- else %}
        range6 {{ network.ipv6_subnet | ansible.utils.ipaddr('network') }}1:0/116;
        {%- endif %}
    }
}

{%- for host in network.hosts | default([]) %}
{%- if host.ipv6_address is defined %}

host {{ host.id }} {
    hardware ethernet {{ host.mac_address }};
    fixed-address6 {{ host.ipv6_address | ansible.utils.ipaddr }};
}
{%- endif %}
{%- endfor %}
{%- endif %}{# ipv6_dhcp #}
{%- endfor %}{# infra_networks #}
